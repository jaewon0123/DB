/***** CREATE TABLE 실습 *****/

-- 1. 고객 테이블 CUSTOMER
CREATE TABLE CUSTOMER (
CUSTOMER_ID NUMBER(10,0) PRIMARY KEY,
CUSTOMER_NAME VARCHAR2(100) NOT NULL,
CUSTOMER_EMAIL VARCHAR2(100) CONSTRAINT C_E_U UNIQUE,
CUSTOMER_PHONE VARCHAR2(20), 
CUSTOMER_ADDRESS VARCHAR2(255),
CONSTRAINT C_P_UIQUE UNIQUE(CUSTOMER_PHONE) 
);
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ID IS '고객아이디';
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_NAME IS '고객이름';
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_EMAIL IS '고객이메일';
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_PHONE IS '고객핸드폰번호';
COMMENT ON COLUMN "CUSTOMER".CUSTOMER_ADDRESS IS '고객주소';
/*
ORA-01780: string literal required
01780. 00000 -  "string literal required"
-> 큰 따옴표 문제

오류 보고 -
ORA-00942: TABLE OR VIEW DOES NOT EXIST
00942.00000 - "TABLE OR VIEW DOES NOT EXIST"
->테이블이름에 큰 따옴표를 넣어도 문제가 없지만
큰 따옴표 같은 경우 대소문자를 구분하는 명칭이 적혀있기 때문에 에러가 발생할 수 있음
*/
COMMIT;

-- PRODUCT 테이블 생성
-- PRODUCT_ID NUMBER (10,0) 기본키
-- PRODUCT_NAME VARCHAR2(100) NULL 사용 불가
-- PRODUCT_PRICAE NUMBER(소수점 2번째 자리까지 허용) NULL 사용 불가
-- PRODUCT_DESC VARCHAR2(200) -- 중복 안되는 특별한 값 설정
CREATE TABLE PRODUCT (
PRODUCT_ID NUMBER (10,0) CONSTRAINT P_I_P PRIMARY KEY,
PRODUCT_NAME VARCHAR2(100) NOT NULL,
PRODUCT_PRICAE NUMBER(10,2) NOT NULL,
PRODUCT_DESC VARCHAR2(200),
CONSTRAINT P_D_U UNIQUE(PRODUCT_DESC));
COMMIT;

-- PRODUCT 값 추가
-- 아메리카노 3000 신선한 원두로 만든 아메리카노
-- 카페라떼 2500 부드러운 우유가 들어간 라떼
-- 카푸치노 3500 진한 커피와 거품이 어우러진 카푸치노
-- 카라멜 마키아토 4000 달콤한 카라멜 시럽이 들어간 마키아토
INSERT INTO PRODUCT VALUES(1,'아메리카노',3000,'신선한 원두로 만든 아메리카노');
INSERT INTO PRODUCT VALUES(2,'카페라떼' ,2500, '부드러운 우유가 들어간 라떼');
INSERT INTO PRODUCT VALUES(3,'카푸치노' ,3500, '진한 커피와 거품이 어우러진 카푸치노');
INSERT INTO PRODUCT VALUES(4,'카라멜 마키아토', 4000,' 달콤한 카라멜 시럽이 들어간 마키아토');

COMMIT;


-- FOOD_COMPANY TABLE 생성
CREATE TABLE FOOD_COMPANY (
COMPANY_ID NUMBER(10,0) PRIMARY KEY, -- 회사 ID 기본키
COMPANY_NAME VARCHAR2(100) NOT NULL, -- 회사 이름 (NULL 불가)
COMPANY_ADDRESS VARCHAR2(255), -- 회사 주소
COMPANY_PHONE VARCHAR2(20) -- 회사 전화번호
);

-- SNACKS 테이블 생성
CREATE TABLE SNACKS (
SNACKS_ID NUMBER(10,0) PRIMARY KEY, -- 과자 ID(기본키)
SNACKS_NAME VARCHAR2(100) NOT NULL, -- 과자이름 (NULL 불가)
PRICE NUMBER(10,2)NOT NULL, -- 가격(NULL 불가)
COMPANY_ID NUMBER(10,0), --> 핵심 포인트

CONSTRAINT FK_COMPANY FOREIGN KEY(COMPANY_ID)
REFERENCES FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE
-- FOOD_COMPANY 회사ID ON DELETE CASCADE -- 부모 삭제시 자식까지 삭제
);
--> ORA-00904: COMPANY_ID NUMBER(10,0), --> 핵심 포인트

---> 부모에서 COMPANY_ID 자식에서도 COMPANY_ID 써야하느냐> 아님 X

CREATE TABLE SNACKS1 (
SNACKS_ID NUMBER(10,0) PRIMARY KEY, -- 과자 ID(기본키)
SNACKS_NAME VARCHAR2(100) NOT NULL, -- 과자이름 (NULL 불가)
PRICE NUMBER(10,2)NOT NULL, -- 가격(NULL 불가)
CCCCCCC NUMBER(10,0), --> 핵심 포인트

CONSTRAINT FK_COMPANY1 FOREIGN KEY(CCCCCCC)
REFERENCES FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE
);

CREATE TABLE SNACKS2 (
SNACKS_ID NUMBER(10,0) PRIMARY KEY, -- 과자 ID(기본키)
SNACKS_NAME VARCHAR2(100) NOT NULL, -- 과자이름 (NULL 불가)
PRICE NUMBER(10,2)NOT NULL, -- 가격(NULL 불가)
AAAAAAA NUMBER(10,0), --> 핵심 포인트

CONSTRAINT FK_COMPANY2 FOREIGN KEY(AAAAAAA)
REFERENCES FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE
);

CREATE TABLE SNACKS3 (
SNACKS_ID NUMBER(10,0) PRIMARY KEY, -- 과자 ID(기본키)
SNACKS_NAME VARCHAR2(100) NOT NULL, -- 과자이름 (NULL 불가)
PRICE NUMBER(10,2)NOT NULL, -- 가격(NULL 불가)
ABCDEF NUMBER(10,0), --> 핵심 포인트

CONSTRAINT FK_COMPANY3 FOREIGN KEY(ABCDEF)
REFERENCES FOOD_COMPANY(COMPANY_ID)
ON DELETE CASCADE
);

--> ABCDEF FREGN KEY 키를 참조할 변수명
---> 참조할 변수명 FK_COMPANY3 규칙명 작성해주는데 규칙명은 모든 테이블 합쳐서 동일한 이름을 쓸 수 없음


-- 테이블 생성 DRINK_COMPANY (
-- DRINK_ID NUMBER 10,0 기본키
-- DRINK_NAME VARCHAR2 100 NOT NULL
CREATE TABLE DRINK_COMPANY{
DRINK_ID NUMBER(10,0) PRIMARY KEY,
DRINK_NAME VARCHAR2(100) NOT NULL,
DRINK_ADDRESS VARCHAR2(255),
DRINK_PHONE VARCHAR2(20)
);